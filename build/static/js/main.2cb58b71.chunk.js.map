{"version":3,"sources":["components/layout.js","components/home.js","components/sub-components/modal.js","components/register.js","components/sub-components/form.js","components/group.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","children","narrowStripe","className","to","Home","Modal","heading","body","history","useHistory","id","class","onClick","e","push","Register","useState","groupName","setGroupName","email","setEmail","admin","setAdmin","exchangeDate","setDate","spendLimit","setLimit","displayModal","setModal","groupSize","setGroupSize","memberInfo","setInputs","useAddress","setAddress","a","preventDefault","date","Date","parse","dateString","toLocaleString","month","year","day","i","members","name","document","getElementById","value","console","log","group","adminEmail","fetch","method","headers","JSON","stringify","register","message","status","success","useEffect","memberInputs","map","type","onSubmit","handleSubmit","onChange","target","Form","formDisplay","token","display","street","setStreet","city","setCity","state","setState","zip","setZip","address","alert","Button","props","function","text","Group","showForm","setForm","setToken","tokenError","setTokenError","queryToken","search","useLocation","useMemo","URLSearchParams","useQuery","get","res","json","then","data","fetchData","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2cb58b71.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport default function Layout({children}) {\r\n    const narrowStripe = \"h-2 w-full shadow-md bg-red-500\";\r\n    \r\n    return (\r\n        <main className=\"flex justify-center items-center h-screen bg-green-400\">\r\n            <div className='w-full max-w-lg'>\r\n                <div className='h-auto bg-white shadow-lg rounded-lg pt-6 text-white'>\r\n                    <div className={narrowStripe}></div>\r\n                    <div className=\"h-20 w-full bg-red-500 mt-2 mb-2 flex justify-center items-center shadow-md\">\r\n                        <Link to=\"/\"><h1 className=\"text-white font-bold font-display text-4xl\">SECRET SANTA-FIER</h1></Link>\r\n                    </div>\r\n                    <div className={narrowStripe}></div>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    const narrowStripe = \"h-2 w-full shadow-md bg-red-500\";\r\n\r\n    return (\r\n    <>\r\n        \r\n        <div className=\"flex justify-center items-center text-xl text-red-500 font-bold h-24\">\r\n            <h2>Create a Group to begin</h2>\r\n        </div>\r\n        <div className={narrowStripe}></div>\r\n        <div className=\"h-20 flex flex-row-reverse justify-evenly items-center mt-2 mb-2 bg-red-500 shadow-md\">\r\n            <Link to=\"/register\">\r\n                <button className=\"transition-all duration-500 hover:bg-white shadow-md font-bold px-2 py-3 rounded-md text-lg hover:text-red-500 border-2 border-white bg-red-500 text-white\">\r\n                    Create Group\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        <div className={narrowStripe}></div>\r\n    </>\r\n    )\r\n}","import { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Modal({heading, body}) {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        \r\n        <div className=\"fixed flex justify-center items-center inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full\"\r\n            id=\"modal\">\r\n    \r\n        <div className=\" p-5 border rounded-md w-96 shadow-lg bg-white\">\r\n            <div className=\"mt-3 text-center\">\r\n                <div className=\"h-2 w-full shadow-md bg-red-500\"></div>\r\n                <div className=\"h-16 w-full bg-red-500 mt-2 mb-2 flex justify-center items-center shadow-md\">\r\n                    <h3 class=\"text-2xl font-display text-white\">{heading}</h3>\r\n                </div>\r\n                <div className=\"h-2 w-full shadow-md bg-red-500\"></div>\r\n                <div className=\"text-gray-800 font-semibold p-3\">\r\n                    <p>{body}</p>\r\n                </div>\r\n\t\t        <div class=\"items-center px-4 py-3\">\r\n\t\t\t        <button\r\n\t\t\t\t        id=\"ok-btn\"\r\n\t\t\t\t        class=\"px-4 py-2 bg-green-500 text-white text-base font-medium rounded-md shadow-sm transition-all duration-500 hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-green-300\"\r\n                        onClick={(e) => {history.push('/')}}\r\n\t\t\t        >\r\n\t\t\t\t        Close\r\n\t\t\t        </button>\r\n\t\t        </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport Modal from \"./sub-components/modal\";\r\n\r\n\r\nexport default function Register() {\r\n    const [groupName, setGroupName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState('');\r\n    const [exchangeDate, setDate] = useState('');\r\n    const [spendLimit, setLimit] = useState('');\r\n    const [displayModal, setModal] = useState(false);\r\n    const [groupSize, setGroupSize] = useState(1);\r\n    const [memberInfo, setInputs] = useState('');\r\n    const [useAddress, setAddress] = useState(false);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const date = Date.parse(exchangeDate);\r\n        const dateString = new Date(date).toLocaleString('default', { month: 'long', year: 'numeric', day: 'numeric' });\r\n        for (let i = 0; i < groupSize; i++) {\r\n            members.push({\r\n                name: document.getElementById(`Member ${i} name`).value,\r\n                email: document.getElementById(`Member ${i} email`).value\r\n            })\r\n        }\r\n        console.log(useAddress);\r\n        const body = {\r\n            group: {\r\n                name: groupName,\r\n                admin: admin,\r\n                adminEmail: email,\r\n                exchangeDate: dateString,\r\n                spendLimit: spendLimit,\r\n                useAddress: useAddress,\r\n            },\r\n            members: members\r\n        }\r\n\r\n        const register = await fetch('/api/group-register', {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        });\r\n        console.log(register.body.message);\r\n        if (register.status === 200) {\r\n            setModal(true)\r\n            return {success: true};\r\n        } \r\n    }\r\n\r\n    const members = [];\r\n\r\n    useEffect(() => {\r\n        const memberInputs = [];\r\n        for (let i = 0; i < groupSize; i++) {\r\n            memberInputs.push({name: `Member ${i} name`, email: `Member ${i} email`})\r\n        } \r\n        setInputs(memberInputs.map(({name, email}) => (\r\n            <div key={name} className=\"flex items-center justify-around mb-2\">\r\n                <div>    \r\n                    <div>\r\n                        <label>\r\n                            Name\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input name={name} id={name} type='text' className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div>    \r\n                    <div>\r\n                        <label>\r\n                            Email\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input name={email} id={email} type='email' className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )}, [groupSize]);\r\n            \r\n    return (\r\n        <>\r\n            {displayModal === true ? <Modal heading=\"Group Added!\" body=\"You will get an email when all group members have confirmed.\" /> : null}\r\n            <form onSubmit={(e) => {handleSubmit(e)}} className=\"text-gray-600 font-bold mt-5\">\r\n            <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Name\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" value={admin} onChange={(e) => setAdmin(e.target.value)} className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Group Name\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" value={groupName} onChange={(e) => setGroupName(e.target.value)} className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Email\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input value={email} onChange={(e) => setEmail(e.target.value)} type='email' className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Spending Limit\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input value={spendLimit} onChange={(e) => setLimit(e.target.value)} type='number' className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Gift Exchange Date\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <input value={exchangeDate} onChange={(e) => setDate(e.target.value)} type='date' className=\"bg-gray-100 border-2 rounded-md\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center mb-5\">\r\n                    <div className=\"w-1/3\">\r\n                        <label>\r\n                            Include Mailing Address?\r\n                        </label>\r\n                    </div>\r\n                    <div> \r\n                        <input onChange={(e) => setAddress(!useAddress)} type='checkbox' className=\"h-6 w-6 bg-gray-100 border-2 rounded-md mt-3\" />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"flex flex-col flex-wrap justify-around p-2\">\r\n                    \r\n                    {memberInfo}\r\n                    <div className=\"flex justify-center mt-2\">\r\n                        <div className=\"flex items-center w-1/5 justify-around\">\r\n                            <button onClick={(e) => setGroupSize(groupSize + 1)} type=\"button\" className=\"material-icons-outlined text-white bg-green-400 rounded-md p-1\">add</button>\r\n                            <button onClick={(e) => setGroupSize(groupSize - 1)} type=\"button\" className=\"material-icons-outlined text-white bg-red-500 rounded-md p-1\">remove</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-center p-3 \">\r\n                    <button className=\"btn bg-red-500 px-2 py-1 rounded-md font-display font-bold text-white text-lg\" type=\"submit\" value=\"Submit\">SUBMIT</button>\r\n                </div>\r\n            </form>        \r\n        </>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport Modal from \"./modal\";\r\n\r\nexport default function Form({ token, display }) {\r\n    const [street, setStreet] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [zip, setZip] = useState('');\r\n    const [displayModal, setModal] = useState(0);\r\n    \r\n    let formDisplay;\r\n    display ? (formDisplay = \"transition-all h-80 ease-in-out duration-700 bg-red-500 rounded-b-lg w-full p-5 font-bold\")\r\n         : (formDisplay = \"transition-all h-0 opacity-0 ease-in-out duration-700 bg-red-500 rounded-b-lg w-full p-5 font-bold \")\r\n    \r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const res = await fetch('/api/address', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                token: token,\r\n                address: `${street} ${city}, ${state} ${zip}`\r\n            }),\r\n        });\r\n        if (res.status === 200) {\r\n            setModal(true);\r\n            return\r\n        } else {\r\n            alert(\"An error occurred.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className={formDisplay}>\r\n    { displayModal ? <Modal heading=\"Address Added!\" body=\"You will get an email once all group members have confirmed.\" /> : null }       \r\n        <form onSubmit={handleSubmit} className=\"w-full flex flex-col items-center\">\r\n            <div className=\"flex flex-col\">    \r\n                <label>Street or Box Number</label>\r\n                <input className=\"rounded p-1 text-gray-700 font-semibold focus:outline-green\" value={street} onChange={(e) => setStreet(e.target.value)} />\r\n            </div>\r\n            <div className=\"flex flex-col\">  \r\n                <label>City</label>\r\n                <input className=\"rounded p-1 text-gray-700 font-semibold focus:outline-green\" value={city} onChange={(e) => setCity(e.target.value)} />\r\n            </div>\r\n            <div className=\"flex flex-col\">  \r\n                <label>State</label>\r\n                <input className=\"rounded p-1 text-gray-700 font-semibold focus:outline-green\" value={state} onChange={(e) => setState(e.target.value)} />\r\n            </div>\r\n            <div className=\"flex flex-col\">    \r\n                <label>Postal Code</label>\r\n                <input className=\"rounded p-1 text-gray-700 font-semibold focus:outline-green\" value={zip} type='tel' onChange={(e) => setZip(e.target.value)} />\r\n                <div className=\"w-full flex justify-end\">\r\n                    <button className=\"transition-all duration-500 p-2 border-white border-4 mt-3 mr-1 rounded-md text-lg font-bold hover:bg-white hover:text-red-500\" value='Submit' type='submit'>Submit</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}","import { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Form from \"./sub-components/form\";\r\nimport Modal from \"./sub-components/modal\";\r\n\r\nfunction useQuery() {\r\n    const { search } = useLocation();\r\n    return useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nfunction Button(props) {\r\n    return (\r\n    <button onClick={(e) => props.function(!props.value)} className=\"w-36 mt-6 transition-all duration-500 rounded-md bg-red-500 border-2 border-white p-3 font-semibold text-white hover:bg-green-400\">{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default function Group() {\r\n    const [showForm, setForm] = useState(false);\r\n    const [token, setToken] = useState(false);\r\n    const [tokenError, setTokenError] = useState(false);\r\n    const [displayModal, setModal] = useState(0);\r\n    \r\n    const queryToken = useQuery().get(\"token\");\r\n    console.log(queryToken);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await fetch('/api/verify-email', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    token: queryToken\r\n                }),\r\n            });\r\n\r\n            if (res.status === 200) {\r\n                res.json()\r\n                .then(data => setToken(data.token))\r\n            } else {\r\n                setTokenError(true);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [queryToken])\r\n    console.log(token);\r\n    return (\r\n    <>    \r\n        <div className=\"flex flex-col items-center justify-center p-10 text-gray-700 font-bold\">\r\n        { displayModal ? <Modal heading=\"Address Added!\" body=\"You will get an email once all group members have confirmed.\" /> : null }\r\n            {tokenError ? <Modal heading=\"Oops!\" body=\"Your token is invalid; please double-check the url you received in your email.\" /> : \r\n            <h3>Email verification successful!</h3> }\r\n            {\r\n                token ? <Button value={showForm} function={setForm} text=\"Enter Mailing Address\" /> : <Button value={displayModal} function={setModal} text=\"Next\" />\r\n            }\r\n        </div>\r\n        <Form token={token} display={showForm} />\r\n    </>\r\n    )\r\n}","import {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Layout from './components/layout';\r\nimport Home from './components/home'\r\nimport Register from './components/register';\r\nimport Group from './components/group';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Route path=\"/group\">\r\n          <Group />\r\n        </Route>\r\n      </Switch>\r\n    </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}